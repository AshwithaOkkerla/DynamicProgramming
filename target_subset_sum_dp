/
    bool isSubsetSum(vector<int>arr, int sum){
        // code here 
        int n = arr.size();
        vector<vector<bool>>dp(n+1,vector<bool>(sum+1));
        
        for(int i=0;i<n;i++){
            dp[i][0] = true;
            
        }
        
        for(int j=1;j<=sum;j++){
            dp[0][j] = false;
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=sum;j++){
                if(j<arr[i-1]){
                    //cant include
                    dp[i][j] = dp[i-1][j];
                }
                if(j>=arr[i-1]){
                    dp[i][j] = dp[i-1][j] || dp[i-1][j-arr[i-1]];
                }
            }
        }
        
        return dp[n][sum];
        
        
    }
};

vector<bool>prev(tsum+1,0), cur(tsum+1,0);
        prev[0] = cur[0] = true;
        prev[nums[0]] = true;
        for(int i=1;i<n;i++){
            for(int j=1;j<=tsum;j++){
                bool nt = prev[j];
                bool t = false;
                if(nums[i]<=j){
                    t = prev[j-nums[i]];
                }
                cur[j] = t | nt;
            }
            prev = cur;
        }
